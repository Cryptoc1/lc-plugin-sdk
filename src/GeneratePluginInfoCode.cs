using Microsoft.Build.Framework;

namespace LethalCompany.Plugin.Sdk;

/// <summary> Generates C# code for a type containing constant values of PluginInfo passed in from MSBuild Properties. </summary>
public sealed class GeneratePluginInfoCode : Microsoft.Build.Utilities.Task
{
    /// <summary> The code that was generated. </summary>
    [Output]
    public string GeneratedText { get; set; } = string.Empty;

    /// <summary> The plugin's identifier to include in the generated code. </summary>
    [Required]
    public string Identifier { get; init; } = string.Empty;

    /// <summary> The plugin's name to include in the generated code. </summary>
    [Required]
    public string Name { get; init; } = string.Empty;

    /// <summary> The namespace to generated code in. </summary>
    [Required]
    public string Namespace { get; init; } = string.Empty;

    /// <summary> The access modifiers to be used when generating the PluginInfo type. </summary>
    public string TypeModifiers { get; init; } = "internal static";

    /// <summary> The name of the PluginInfo type to generate. </summary>
    public string TypeName { get; init; } = "GeneratedPluginInfo";

    /// <summary> The plugin's version to include in the generated code. </summary>
    [Required]
    public string Version { get; init; } = string.Empty;

    /// <inheritdoc/>
    public override bool Execute()
    {
        GeneratedText = $@"// <auto-generated />
namespace {Namespace};

[System.Runtime.CompilerServices.CompilerGenerated]
{TypeModifiers} class {TypeName}
{{
    public const string Identifier = ""{Identifier}"";
    public const string Name = ""{Name}"";
    public const string Version = ""{Version}"";
}}";
        return true;
    }
}
