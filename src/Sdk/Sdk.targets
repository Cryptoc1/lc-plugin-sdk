<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />

  <Target Name="_GeneratePluginInfo" AfterTargets="PrepareForPluginCompile" BeforeTargets="BeforeCompile;CoreCompile" Inputs="$(MSBuildAllProjects)" Outputs="$(IntermediateOutputPath)$(MSBuildProjectName).PluginInfo.g.cs">
    <PropertyGroup>
      <_GeneratedPluginInfoText><![CDATA[// <auto-generated />
namespace $(RootNamespace)%3B

public static class $(PluginInfoTypeName)
{
    public const string Identifier = "$(PluginId)"%3B
    public const string Name = "$(PluginName)"%3B
    public const string Version = "$(PluginVersion)"%3B
}]]></_GeneratedPluginInfoText>

      <_GeneratedPluginInfoPath>$(IntermediateOutputPath)$(MSBuildProjectName).PluginInfo.g.cs</_GeneratedPluginInfoPath>
    </PropertyGroup>

    <ItemGroup>
      <Compile Include="$(_GeneratedPluginInfoPath)" />
      <FileWrites Include="$(_GeneratedPluginInfoPath)" />
    </ItemGroup>

    <WriteLinesToFile Lines="$(_GeneratedPluginInfoText)" File="$(_GeneratedPluginInfoPath)" WriteOnlyWhenDifferent="true" Overwrite="true" />
  </Target>

  <Target Name="_GeneratePluginManifest" AfterTargets="PrepareForPluginCompile" BeforeTargets="CopyToOutputDirectory;Publish" Inputs="$(MSBuildAllProjects)" Outputs="$(IntermediateOutputPath)$(MSBuildProjectName).manifest.g.json">
    <PropertyGroup>
      <_GeneratedManifestText><![CDATA[{
    "name": "$(ThunderId)",
    "dependencies": [$(ThunderDependencies.Replace('%3B', ','))],
    "description": "$(PluginDescription)",
    "version_number": "$(PluginVersion)",
    "website_url": "$(ThunderWebsiteUrl)"
}]]></_GeneratedManifestText>

      <_GeneratedManifestPath>$(IntermediateOutputPath)$(MSBuildProjectName).manifest.g.json</_GeneratedManifestPath>
    </PropertyGroup>

    <ItemGroup>
      <FileWrites Include="$(_GeneratedManifestPath)" />
    </ItemGroup>

    <WriteLinesToFile Lines="$(_GeneratedManifestText)" File="$(_GeneratedManifestPath)" WriteOnlyWhenDifferent="true" Overwrite="true" />
  </Target>

  <Target Name="_CopyToPublishDir" AfterTargets="Publish" BeforeTargets="PublishPlugin">
    <Copy SourceFiles="$(_GeneratedManifestPath)" DestinationFiles="$(PublishDir)manifest.json" SkipUnchangedFiles="true" Condition=" Exists('$(_GeneratedManifestPath)') " />
  </Target>

  <Target Name="PrepareForPluginCompile" BeforeTargets="Compile;GenerateMSBuildEditorConfigFileShouldRun;PrepareForPluginPublish">
    <!-- NOTE: set plugin prop defaults -->
    <PropertyGroup>
      <Configuration Condition=" '$(Configuration)' == '' ">Release</Configuration>

      <PluginDescription Condition=" '$(PluginDescription)' == '' ">$(Description)</PluginDescription>
      <PluginId Condition=" '$(PluginId)' == '' ">$(PackageId)</PluginId>
      <PluginId Condition=" '$(PluginId)' == '' ">$(AssemblyName)</PluginId>

      <PluginInfoTypeName Condition=" '$(PluginInfoTypeName)' == '' ">GeneratedPluginInfo</PluginInfoTypeName>
      <PluginName Condition=" '$(PluginName)' == '' ">$(Title)</PluginName>
      <PluginName Condition=" '$(PluginName)' == '' ">$(Product)</PluginName>
      <PluginName Condition=" '$(PluginName)' == '' ">$(AssemblyName)</PluginName>

      <PluginVersion Condition=" '$(PluginVersion)' == '' ">$(Version)</PluginVersion>

      <ThunderId Condition=" '$(ThunderId)' == '' ">$(PluginId)</ThunderId>
      <ThunderDependencies>@(ThunderDependency -> '"%(Filename)%(Extension)"')</ThunderDependencies>
      <ThunderWebsiteUrl Condition=" '$(ThunderWebsiteUrl)' == '' ">$(PackageProjectUrl)</ThunderWebsiteUrl>
    </PropertyGroup>
  </Target>

  <Target Name="PrepareForPluginPublish" BeforeTargets="PrepareForPublish">
    <PropertyGroup>
      <_PublishDir>$(PublishDir)</_PublishDir>
      <PublishDir>$(OutputPath)publish\</PublishDir>

      <_PluginProfileDir Condition=" '$(PluginStagingProfile)' != '' ">$(AppData)\Thunderstore Mod Manager\DataFolder\LethalCompany\profiles\$(PluginStagingProfile)</_PluginProfileDir>
      <PluginStagingDir Condition=" '$(PluginStagingProfile)' != '' ">$(_PluginProfileDir)\BepInEx\plugins\$(ThunderId)</PluginStagingDir>

      <_PluginPackage>$(_PublishDir)\$(ThunderId)-$(PluginVersion).zip</_PluginPackage>

      <!-- NOTE: a custom output path was NOT specified, place the archive in 'bin\', rather than 'bin\publish\' (can't place archive in the folder being archived) -->
      <_PluginPackage Condition=" '$(PublishDir)' == '$(_PublishDir)' ">$(OutputPath)$(ThunderId)-$(PluginVersion).zip</_PluginPackage>
    </PropertyGroup>

    <!-- NOTE: enforce optimizations in release mode  -->
    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
      <DebugType>None</DebugType>
      <DebugSymbols>false</DebugSymbols>
      <IncludeSymbols>false</IncludeSymbols>
      <Optimize>true</Optimize>
    </PropertyGroup>

    <MakeDir Directories="$(_PublishDir)" />
  </Target>

  <Target Name="PublishPlugin" AfterTargets="Publish">
    <Warning Code="LC001" Text="Plugin was not built in Release mode, users may experience an impact to their performance!" Condition=" '$(Configuration)' != 'Release' AND '$(StagePlugin)' != 'true' " />

    <!-- NOTE: we don't need this, BepInEx has it's own semantics for resolving runtime deps! -->
    <Delete Files="$(PublishDir)\$(AssemblyName).deps.json" />

    <ItemGroup>
      <_PluginFiles Include="$(PublishDir)\**\*.*" Exclude="$(PublishDir)\$(AssemblyName).deps.json" />
      <_PluginFiles Remove="$(PublishDir)\$(AssemblyName).deps.json" />
      <_PluginStagingDirFiles Include="$(PluginStagingDir)\**.*" />
    </ItemGroup>

    <Error Code="LC002" Text="Cannot Stage Plugin, PluginStagingProfile directory '$(_PluginProfileDir)' does not exist." Condition=" '$(StagePlugin)' == 'true' AND !Exists('$(_PluginProfileDir)') " />
    <MakeDir Directories="$(PluginStagingDir)" />

    <Delete Files="@(_PluginStagingDirFiles)" Condition=" '$(StagePlugin)' == 'true' " />
    <Copy SourceFiles="@(_PluginFiles)" DestinationFiles="@(_PluginFiles -> '$(PluginStagingDir)\%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" Condition=" '$(StagePlugin)' == 'true' " />

    <ZipDirectory SourceDirectory="$(PublishDir)" DestinationFile="$(_PluginPackage)" Overwrite="true" Condition=" '$(StagePlugin)' != 'true' " />
  </Target>

</Project>